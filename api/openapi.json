{
  "openapi": "3.0.3",
  "info": {
    "title": "MailBlock API",
    "description": "API for managing email accounts, API keys, and emails in MailBlock application",
    "version": "1.0.0",
    "contact": {
      "name": "MailBlock Support"
    }
  },
  "servers": [
    {
      "url": "http://localhost:3000/api",
      "description": "Development server"
    },
    {
      "url": "https://mailblock.de/api",
      "description": "Production server"
    }
  ],
  "security": [
    {
      "BearerAuth": []
    }
  ],
  "paths": {
    "/api-keys": {
      "get": {
        "summary": "Get API keys",
        "description": "Retrieve all API keys for the authenticated user",
        "tags": ["API Keys"],
        "responses": {
          "200": {
            "description": "List of API keys",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "apiKeys": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ApiKey"
                      }
                    }
                  }
                },
                "example": {
                  "apiKeys": [
                    {
                      "id": "123e4567-e89b-12d3-a456-426614174000",
                      "name": "Production Key",
                      "created_at": "2024-01-15T10:30:00Z",
                      "is_active": true,
                      "last_used_at": "2024-01-20T14:22:00Z"
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        }
      },
      "post": {
        "summary": "Create API key",
        "description": "Create a new API key for the authenticated user",
        "tags": ["API Keys"],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["name"],
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "Name for the API key",
                    "example": "Production Key"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "API key created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "apiKey": {
                      "type": "string",
                      "description": "The raw API key (shown only once)",
                      "example": "sk_1234567890abcdef1234567890abcdef"
                    },
                    "id": {
                      "type": "string",
                      "format": "uuid",
                      "example": "123e4567-e89b-12d3-a456-426614174000"
                    },
                    "status": {
                      "type": "string",
                      "example": "success"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        }
      },
      "delete": {
        "summary": "Delete API key",
        "description": "Delete an API key for the authenticated user",
        "tags": ["API Keys"],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["id"],
                "properties": {
                  "id": {
                    "type": "string",
                    "format": "uuid",
                    "description": "ID of the API key to delete",
                    "example": "123e4567-e89b-12d3-a456-426614174000"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "API key deleted successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "success"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        }
      }
    },
    "/emails": {
      "get": {
        "summary": "Get emails",
        "description": "Retrieve emails with pagination and optional status filtering",
        "tags": ["Emails"],
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "Page number for pagination",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "default": 1
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Number of items per page",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 100,
              "default": 50
            }
          },
          {
            "name": "status",
            "in": "query",
            "description": "Filter emails by status",
            "required": false,
            "schema": {
              "type": "string",
              "enum": ["sent", "pending", "failed", "scheduled"]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of emails with pagination",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "emails": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Email"
                      }
                    },
                    "pagination": {
                      "$ref": "#/components/schemas/Pagination"
                    }
                  }
                },
                "example": {
                  "emails": [
                    {
                      "id": "email_123",
                      "from_email": "user@example.com",
                      "to_email": "recipient@example.com",
                      "subject": "Welcome to MailBlock",
                      "status": "sent",
                      "created_at": "2024-01-15T10:30:00Z",
                      "scheduled_at": null,
                      "sent_at": "2024-01-15T10:35:00Z",
                      "error": null,
                      "inbox_id": 1
                    }
                  ],
                  "pagination": {
                    "page": 1,
                    "limit": 50,
                    "total": 100,
                    "totalPages": 2,
                    "hasNextPage": true,
                    "hasPreviousPage": false
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        }
      }
    },
    "/inboxes": {
      "get": {
        "summary": "Get email accounts",
        "description": "Retrieve all email accounts (inboxes) for the authenticated user",
        "tags": ["Email Accounts"],
        "responses": {
          "200": {
            "description": "List of email accounts",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Inbox"
                  }
                },
                "example": [
                  {
                    "inboxid": 1,
                    "name": "Primary Email",
                    "email": "user@example.com",
                    "smtphost": "smtp.gmail.com",
                    "smtpport": 587,
                    "username": "user@example.com",
                    "password": "encrypted_password",
                    "usetls": true,
                    "imaphost": "imap.gmail.com",
                    "imapport": 993
                  }
                ]
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        }
      },
      "post": {
        "summary": "Create email account",
        "description": "Create a new email account (inbox) for the authenticated user",
        "tags": ["Email Accounts"],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/InboxCreate"
              },
              "example": {
                "name": "Work Email",
                "email": "work@company.com",
                "smtphost": "smtp.company.com",
                "smtpport": 587,
                "username": "work@company.com",
                "password": "secure_password",
                "usetls": true,
                "imaphost": "imap.company.com",
                "imapport": 993
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Email account created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Inbox"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        }
      }
    },
    "/inboxes/{id}": {
      "get": {
        "summary": "Get email account",
        "description": "Retrieve a specific email account by ID",
        "tags": ["Email Accounts"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "Email account ID",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Email account details",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Inbox"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        }
      },
      "put": {
        "summary": "Update email account",
        "description": "Update an existing email account",
        "tags": ["Email Accounts"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "Email account ID",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/InboxUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Email account updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Inbox"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        }
      },
      "delete": {
        "summary": "Delete email account",
        "description": "Delete an email account",
        "tags": ["Email Accounts"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "Email account ID",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Email account deleted successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        }
      }
    },
    "/inboxes/{id}/test": {
      "post": {
        "summary": "Test email account connection",
        "description": "Test the connection settings for an email account",
        "tags": ["Email Accounts"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "Email account ID",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ConnectionTest"
              },
              "example": {
                "email": "test@example.com",
                "smtphost": "smtp.example.com",
                "smtpport": 587,
                "username": "test@example.com",
                "password": "password",
                "usetls": true,
                "imaphost": "imap.example.com",
                "imapport": 993
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Connection test result",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "message": {
                      "type": "string",
                      "example": "Connection test successful"
                    },
                    "tested": {
                      "type": "object",
                      "properties": {
                        "smtp": {
                          "type": "boolean",
                          "example": true
                        },
                        "imap": {
                          "type": "boolean",
                          "example": true
                        }
                      }
                    },
                    "timestamp": {
                      "type": "string",
                      "format": "date-time",
                      "example": "2024-01-15T10:30:00Z"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "ApiKey": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "description": "Unique identifier for the API key"
          },
          "name": {
            "type": "string",
            "description": "Human-readable name for the API key"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "description": "When the API key was created"
          },
          "is_active": {
            "type": "boolean",
            "description": "Whether the API key is active"
          },
          "last_used_at": {
            "type": "string",
            "format": "date-time",
            "nullable": true,
            "description": "When the API key was last used"
          }
        }
      },
      "Email": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Unique identifier for the email"
          },
          "from_email": {
            "type": "string",
            "format": "email",
            "description": "Sender email address"
          },
          "to_email": {
            "type": "string",
            "format": "email",
            "description": "Recipient email address"
          },
          "subject": {
            "type": "string",
            "nullable": true,
            "description": "Email subject line"
          },
          "status": {
            "type": "string",
            "enum": ["sent", "pending", "failed", "scheduled"],
            "nullable": true,
            "description": "Current status of the email"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "nullable": true,
            "description": "When the email was created"
          },
          "scheduled_at": {
            "type": "string",
            "format": "date-time",
            "nullable": true,
            "description": "When the email is scheduled to be sent"
          },
          "sent_at": {
            "type": "string",
            "format": "date-time",
            "nullable": true,
            "description": "When the email was actually sent"
          },
          "error": {
            "type": "string",
            "nullable": true,
            "description": "Error message if sending failed"
          },
          "inbox_id": {
            "type": "integer",
            "description": "ID of the inbox used to send this email"
          }
        }
      },
      "Inbox": {
        "type": "object",
        "properties": {
          "inboxid": {
            "type": "integer",
            "description": "Unique identifier for the inbox"
          },
          "name": {
            "type": "string",
            "nullable": true,
            "description": "Human-readable name for the inbox"
          },
          "email": {
            "type": "string",
            "format": "email",
            "description": "Email address"
          },
          "smtphost": {
            "type": "string",
            "nullable": true,
            "description": "SMTP server hostname"
          },
          "smtpport": {
            "type": "integer",
            "nullable": true,
            "description": "SMTP server port"
          },
          "username": {
            "type": "string",
            "nullable": true,
            "description": "Authentication username"
          },
          "password": {
            "type": "string",
            "nullable": true,
            "description": "Authentication password (encrypted)"
          },
          "usetls": {
            "type": "boolean",
            "nullable": true,
            "description": "Whether to use TLS encryption"
          },
          "imaphost": {
            "type": "string",
            "nullable": true,
            "description": "IMAP server hostname"
          },
          "imapport": {
            "type": "integer",
            "nullable": true,
            "description": "IMAP server port"
          }
        }
      },
      "InboxCreate": {
        "type": "object",
        "required": ["email"],
        "properties": {
          "name": {
            "type": "string",
            "description": "Human-readable name for the inbox"
          },
          "email": {
            "type": "string",
            "format": "email",
            "description": "Email address"
          },
          "smtphost": {
            "type": "string",
            "description": "SMTP server hostname"
          },
          "smtpport": {
            "type": "integer",
            "description": "SMTP server port"
          },
          "username": {
            "type": "string",
            "description": "Authentication username"
          },
          "password": {
            "type": "string",
            "description": "Authentication password"
          },
          "usetls": {
            "type": "boolean",
            "description": "Whether to use TLS encryption"
          },
          "imaphost": {
            "type": "string",
            "description": "IMAP server hostname"
          },
          "imapport": {
            "type": "integer",
            "description": "IMAP server port"
          }
        }
      },
      "InboxUpdate": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Human-readable name for the inbox"
          },
          "email": {
            "type": "string",
            "format": "email",
            "description": "Email address"
          },
          "smtphost": {
            "type": "string",
            "description": "SMTP server hostname"
          },
          "smtpport": {
            "type": "integer",
            "description": "SMTP server port"
          },
          "username": {
            "type": "string",
            "description": "Authentication username"
          },
          "password": {
            "type": "string",
            "description": "Authentication password"
          },
          "usetls": {
            "type": "boolean",
            "description": "Whether to use TLS encryption"
          },
          "imaphost": {
            "type": "string",
            "description": "IMAP server hostname"
          },
          "imapport": {
            "type": "integer",
            "description": "IMAP server port"
          }
        }
      },
      "ConnectionTest": {
        "type": "object",
        "required": ["email", "smtphost", "smtpport", "username", "password"],
        "properties": {
          "email": {
            "type": "string",
            "format": "email",
            "description": "Email address to test"
          },
          "smtphost": {
            "type": "string",
            "description": "SMTP server hostname"
          },
          "smtpport": {
            "type": "integer",
            "description": "SMTP server port"
          },
          "username": {
            "type": "string",
            "description": "Authentication username"
          },
          "password": {
            "type": "string",
            "description": "Authentication password"
          },
          "usetls": {
            "type": "boolean",
            "description": "Whether to use TLS encryption"
          },
          "imaphost": {
            "type": "string",
            "description": "IMAP server hostname"
          },
          "imapport": {
            "type": "integer",
            "description": "IMAP server port"
          }
        }
      },
      "Pagination": {
        "type": "object",
        "properties": {
          "page": {
            "type": "integer",
            "description": "Current page number"
          },
          "limit": {
            "type": "integer",
            "description": "Number of items per page"
          },
          "total": {
            "type": "integer",
            "description": "Total number of items"
          },
          "totalPages": {
            "type": "integer",
            "description": "Total number of pages"
          },
          "hasNextPage": {
            "type": "boolean",
            "description": "Whether there is a next page"
          },
          "hasPreviousPage": {
            "type": "boolean",
            "description": "Whether there is a previous page"
          }
        }
      },
      "Error": {
        "type": "object",
        "properties": {
          "error": {
            "type": "string",
            "description": "Error message"
          }
        }
      }
    },
    "responses": {
      "BadRequest": {
        "description": "Bad request",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Error"
            },
            "example": {
              "error": "Invalid request parameters"
            }
          }
        }
      },
      "Unauthorized": {
        "description": "Unauthorized",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Error"
            },
            "example": {
              "error": "Unauthorized"
            }
          }
        }
      },
      "NotFound": {
        "description": "Resource not found",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Error"
            },
            "example": {
              "error": "Inbox not found"
            }
          }
        }
      },
      "InternalServerError": {
        "description": "Internal server error",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Error"
            },
            "example": {
              "error": "Internal server error"
            }
          }
        }
      }
    },
    "securitySchemes": {
      "BearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT",
        "description": "JWT token obtained from Supabase authentication"
      }
    }
  },
  "tags": [
    {
      "name": "API Keys",
      "description": "Operations for managing API keys"
    },
    {
      "name": "Emails",
      "description": "Operations for managing emails"
    },
    {
      "name": "Email Accounts",
      "description": "Operations for managing email accounts (inboxes)"
    }
  ]
}
